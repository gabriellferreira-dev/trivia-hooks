{"version":3,"sources":["styled-pages/HomePage.style.js","context/GlobalContext.js","styled-components/PlayerForm.style.js","components/PlayerForm.js","styled-components/StartGame.style.js","services/fetchQuestions.js","services/decodeQuestions.js","services/translateToPt.js","services/translateQuestions.js","components/StartGameScreen.js","styled-components/QuestionsReport.style.js","styled-components/Icons.style.js","components/QuestionsReportList.js","styled-components/PlayerContainer.style.js","components/HistoryGame.js","pages/HomePage.jsx","styled-components/Header.style.js","components/Header.js","styled-components/Loader.style.js","sound-effects/start-game-countdown.wav","components/Loader.js","styled-components/QuestionsContainer.style.js","styled-components/QuestionTimer.styled.js","components/QuestionTimer.js","sound-effects/game-over.wav","sound-effects/timer.wav","sound-effects/correct-answer.wav","sound-effects/wrong-answer.wav","components/Question.js","sound-effects/reveal.wav","components/QuestionsContainer.js","styled-components/GameSection.style.js","styled-components/StartingAnimation.style.js","pages/GamePage.jsx","styled-pages/Feedback.style.js","sound-effects/drums-appear.wav","components/QuestionsReportModal.js","pages/Feedback.jsx","styles/globalStyle.js","App.js","reportWebVitals.js","provider/TriviaProvider.js","index.js"],"names":["HomePage","styled","section","mounted","css","nextActive","open","GlobalContext","createContext","PlayerForm","div","useStyles","makeStyles","root","borderColor","color","QuestionInput","redirectNextScreen","setMounted","useContext","playerData","setPlayerData","quantity","setQuantity","classes","useEffect","TextField","id","label","name","value","variant","className","onChange","target","autoFocus","onBlur","ToggleButtonGroup","exclusive","onClick","ToggleButton","StartGame","fetchQuestions","url","a","fetch","response","json","data","results","decode","questions","map","i","question","correct_answer","incorrect_answers","category","questionDecoded","decodeURIComponent","correctAnswerDecoded","incorrectAnswersDecoded","answer","categoryDecoded","translateToPt","string","translate","to","translated","translateQuestions","Promise","all","translatedQuestion","translatedCategory","translatedCorrectAnswer","text","translatedIncorrectAnswers","result","StartGameScreen","scoreboard","setQuestions","useState","startedGame","setStartedGame","setTranslate","getQuestions","Number","decoded","questionsTranslated","Button","size","startedIn","Date","gameHistory","JSON","parse","localStorage","getItem","length","setItem","stringify","createGameStorage","FormGroup","FormControlLabel","control","Checkbox","setCORS","StyledModal","Modal","StyledCheckIcon","CheckIcon","StyledCloseIcon","CloseIcon","QuestionReportList","answers","questionClick","nextSibling","classList","contains","remove","add","questionIcon","playerAnswer","correct","item","j","style","fontWeight","PlayerContainer","HistoryGame","openModal","setOpenModal","history","toglePlayer","onClose","Box","date","toLocaleDateString","StyledHistoryIcon","HistoryIcon","nextScreen","setNextScreen","setNextActive","setOpen","setHistory","isNext","setTimeout","IconButton","StyledHeader","header","Header","right","wrong","toUpperCase","loaderAnimation","keyframes","Loader","timeLeft","setTimeLeft","useSound","startGameEffect","volume","play","interval","setInterval","clearInterval","StyledQuestionsContainer","circleAnimation","StyledQuestionTimer","isAnswered","QuestionTimer","circumference","circleRef","useRef","circle","current","r","baseVal","Math","PI","strokeDasharray","strokeDashoffset","ref","cx","cy","Question","questionData","answersRef","setNextButtonShow","setScore","shuffledAnswers","setShuffledAnswers","setAnswered","endGame","setEndGame","redirect","setRedirect","gamerOverEffect","gameOverPlay","wrongAnswerEffect","wrongAnswerPlay","correctAnswerEffect","correctAnswerPlay","timerEffect","timerPlay","stopTimerEffect","stop","console","log","player","playerIndex","findIndex","answersList","sort","random","Array","from","children","forEach","removeAttribute","setAnsweredCallback","useCallback","element","setAttribute","addAnswer","handleClick","score","QuestionsContainer","questionIndex","setQuestion","categoryRendered","setCategoryRendered","nextButtonShow","isLoaded","setLoaded","revealEffect","revealPlay","renderCategory","display","GameSection","animation","StartingAnimation","GamePage","starting","setStarting","StyledFeedback","QuestionsReport","StyledButtonAnswers","StyledButtonNewGame","Feedback","setNewGame","isNewGame","drumsAppearEffect","playDrumsEffect","GlobalStyle","createGlobalStyle","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialPlayer","initialScore","TriviaProvider","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09b6ea47.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nconst HomePage = styled.section`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #000119;\n\n  & form {\n    width: 60vh;\n    height: 60%;\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    flex-direction: column;\n    border-radius: 5px;\n    padding: 50px 0;\n    color: #f3f3f3;\n\n    & > div {\n      width: 100%;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      opacity: 0;\n      transition: opacity 1s ease-in-out;\n      justify-content: space-evenly;\n\n      ${({ mounted }) =>\n        mounted &&\n        css`\n          opacity: 1;\n        `}\n\n      ${({ nextActive }) =>\n        nextActive &&\n        css`\n          opacity: 0;\n        `}\n    }\n  }\n\n  & > div {\n    color: #f3f3f3;\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    font-size: 1.1rem;\n    display: flex;\n    align-items: center;\n\n    & > div {\n      max-width: 0;\n      overflow: hidden;\n      transition: all 0.2s ease;\n      background-color: rgba(255, 255, 255, 0.1);\n      padding: 0;\n      border-radius: 2px;\n\n      & > div {\n        min-width: 205px;\n      }\n      \n      ${({ open }) =>\n        open &&\n        css`\n          max-width: 250px;\n          padding: 5px;\n        `}\n    }\n  }\n`;\n\nexport default HomePage;\n","import { createContext } from 'react';\n\nexport const GlobalContext = createContext();\n","import styled from 'styled-components';\n\nexport const PlayerForm = styled.div`\n  flex-direction: column;\n\n  & p {\n    font-weight: 500;\n  }\n\n  & div {\n    font-size: 1.6rem;\n    & label {\n      font-size: 1.6rem;\n      color: #f3f3f3;\n    }\n  }\n\n  & button {\n    padding: 10px 30px;\n    font-size: 1.8rem;\n    color: #f3f3f3;\n    background-color: #e3001a;\n\n    &:hover {\n      background-color: #e3001a !important;\n      opacity: 0.8;\n    }\n  }\n\n  & button.Mui-selected {\n    background-color: #ff3b63;\n    color: #f3f3f3;\n  }\n`;\n","import { TextField, ToggleButton, ToggleButtonGroup } from '@mui/material';\nimport React, { useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport { PlayerForm } from '../styled-components/PlayerForm.style';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    '& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\n      borderColor: '#e3001a',\n    },\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input': {\n      color: '#f3f3f3',\n    },\n    '& .MuiInputLabel-outlined.Mui-focused': {\n      color: '#f3f3f3',\n    },\n    '&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\n      borderColor: '#e3001aa5',\n    },\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline': {\n      borderColor: '#e3001a',\n    },\n    '& .MuiOutlinedInput-input': {\n      color: '#f3f3f3',\n    },\n    '& .MuiInputLabel-outlined': {\n      color: '#f3f3f3',\n    },\n    '&:hover .MuiInputLabel-outlined': {\n      color: 'red',\n    },\n  },\n});\n\nexport default function QuestionInput({ redirectNextScreen, setMounted }) {\n  const { playerData, setPlayerData, quantity, setQuantity } = useContext(GlobalContext);\n  const classes = useStyles();\n\n  const handleChange = ({ target: { value, name } }) => {\n    setPlayerData({ ...playerData, [name]: value });\n  };\n\n  useEffect(() => {\n    setMounted(true);\n    return () => {\n      setMounted(false);\n    };\n  }, [setMounted]);\n\n  return (\n    <PlayerForm>\n      <p>Informe seu nome</p>\n      <TextField\n        id='outlined-basic'\n        label='Name'\n        name='name'\n        value={playerData.name}\n        variant='outlined'\n        className={classes.root}\n        onChange={handleChange}\n        autoFocus={true}\n        onBlur={() => redirectNextScreen(true)}\n      />\n      <p>Selecione a quantidade de perguntas</p>\n      <ToggleButtonGroup\n        color='primary'\n        value={quantity}\n        exclusive\n        onChange={({ target: { value } }) => setQuantity(value)}\n        onClick={() => redirectNextScreen(true)}\n      >\n        <ToggleButton name='quantity' value='5'>\n          5\n        </ToggleButton>\n        <ToggleButton name='quantity' value='10'>\n          10\n        </ToggleButton>\n        <ToggleButton name='quantity' value='15'>\n          15\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </PlayerForm>\n  );\n}\n","import styled from 'styled-components';\n\nexport const StartGame = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  & div {\n    width: 100%;\n    display: flex;\n    justify-content: space-evenly;\n    \n    & button {\n      font-size: 1.8rem;\n      padding: 10px 50px;\n    }\n  }\n\n  & .MuiFormGroup-root {\n    position: absolute;\n    top: 20px;\n    left: 20px;\n    width: fit-content;\n    \n    & svg {\n      font-size: 1.8rem;\n      color: #ffd833;\n    }\n\n    & span {\n      font-size: 1.6rem;\n    }\n  }\n`;\n","export default async function fetchQuestions(url) {\n  const response = await fetch(url);\n  const data = await response.json();\n  return data.results;\n}\n","const decode = (questions) => {\n  const questionsDecoded = questions.map(\n    ({ question, correct_answer, incorrect_answers, category }, i) => {\n      const questionDecoded = decodeURIComponent(question);\n      const correctAnswerDecoded = decodeURIComponent(correct_answer);\n      const incorrectAnswersDecoded = incorrect_answers.map((answer) =>\n        decodeURIComponent(answer)\n      );\n      const categoryDecoded = decodeURIComponent(category);\n      return {\n        ...questions[i],\n        question: questionDecoded,\n        correct_answer: correctAnswerDecoded,\n        incorrect_answers: incorrectAnswersDecoded,\n        category: categoryDecoded,\n      };\n    }\n  );\n  return questionsDecoded;\n};\n\nexport default decode;\n","import { translate } from 'google-translate-api-browser';\n\nexport const translateToPt = async (string) => {\n  const translated = await translate(string, { to: 'pt' });\n  return translated;\n};","import { translateToPt } from './translateToPt';\n\nexport const translateQuestions = async (questions) => {\n  const result = await Promise.all(\n    questions.map(\n      async ({ question, correct_answer, incorrect_answers, category }, i) => {\n        const translatedQuestion = await translateToPt(question);\n        const translatedCategory = await translateToPt(category);\n        const translatedCorrectAnswer = await translateToPt(correct_answer);\n        const translatedIncorrectAnswers = await Promise.all(\n          incorrect_answers.map(async (answer) => {\n            const translated = await translateToPt(answer);\n            return translated.text;\n          })\n        );\n        return {\n          ...questions[i],\n          question: translatedQuestion.text,\n          correct_answer: translatedCorrectAnswer.text,\n          incorrect_answers: translatedIncorrectAnswers,\n          category: translatedCategory.text,\n        };\n      }\n    )\n  );\n  return result;\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Checkbox, FormControlLabel, FormGroup } from '@mui/material';\nimport { StartGame } from '../styled-components/StartGame.style';\nimport fetchQuestions from '../services/fetchQuestions';\nimport { GlobalContext } from '../context/GlobalContext';\nimport decode from '../services/decodeQuestions';\nimport { setCORS } from 'google-translate-api-browser';\nimport { translateQuestions } from '../services/translateQuestions';\n\nsetCORS('https://cors.bridged.cc/');\n\nexport default function StartGameScreen({ redirectNextScreen, setMounted }) {\n  const { quantity, scoreboard, setQuestions, playerData } =\n    useContext(GlobalContext);\n  const [startedGame, setStartedGame] = useState(false);\n  const [translate, setTranslate] = useState(false);\n\n  const getQuestions = async () => {\n    const questions = await fetchQuestions(\n      `https://opentdb.com/api.php?amount=${Number(quantity)}&encode=url3986`\n    );\n    const decoded = decode(questions);\n\n    if (translate) {\n      const questionsTranslated = await translateQuestions(decoded);\n      setQuestions(questionsTranslated);\n      return;\n    }\n    setQuestions(decoded);\n  };\n\n  const createGameStorage = () => {\n    const startedIn = new Date();\n    const gameHistory = JSON.parse(localStorage.getItem('gameHistory'));\n    const id = gameHistory ? gameHistory[gameHistory.length - 1].id : 1;\n\n    if (gameHistory) {\n      localStorage.setItem(\n        'gameHistory',\n        JSON.stringify([\n          ...gameHistory,\n          { ...playerData, scoreboard, startedIn, id: id + 1 },\n        ])\n      );\n    } else {\n      localStorage.setItem(\n        'gameHistory',\n        JSON.stringify([{ ...playerData, scoreboard, startedIn }])\n      );\n    }\n  };\n\n  const handleClick = () => {\n    createGameStorage();\n    getQuestions();\n    setStartedGame(true);\n  };\n\n  useEffect(() => {\n    setMounted(true);\n    return () => {\n      setMounted(false);\n    };\n  }, [playerData, setMounted]);\n\n  if (startedGame) {\n    return <Redirect to='/game' />;\n  }\n\n  return (\n    <StartGame>\n      <p>{`Olá, ${playerData.name}. Vamos começar?`}</p>\n      <div>\n        <Button\n          variant='contained'\n          color='success'\n          size='large'\n          onClick={handleClick}\n        >\n          Start\n        </Button>\n        <Button\n          variant='outlined'\n          color='error'\n          size='large'\n          onClick={() => redirectNextScreen(false)}\n        >\n          Cancel\n        </Button>\n      </div>\n      <FormGroup>\n        <FormControlLabel\n          control={<Checkbox onChange={() => setTranslate(!translate)} />}\n          label='Traduzir para português'\n        />\n      </FormGroup>\n    </StartGame>\n  );\n}\n","import { Modal } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const StyledModal = styled(Modal)`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n\n& .MuiBox-root {\n  width: 50%;\n  min-width: 400px;\n  background-color: #f3f3f3;\n  padding: 10px;\n  border-radius: 10px;\n  max-height: 400px;\n  overflow: hidden;\n  overflow-y: auto;\n  transition: all 0.3s ease;\n\n  ::-webkit-scrollbar {\n    width: 20px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: #d6dee1;\n    border-radius: 20px;\n    border: 6px solid transparent;\n    background-clip: padding-box;\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background-color: #a8bbbf;\n  }\n\n  & ul {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    list-style: none;\n\n    & li {\n      margin: 5px 0;\n\n      & p {\n        padding: 1rem;\n        border-radius: 5px 5px 0 0;\n        cursor: pointer;\n\n        &.incorrect {\n          background-color: rgba(255, 0, 0, 0.9);\n\n          & ~ div {\n            background-color: rgba(255, 0, 0, 0.2);\n          }\n        }\n\n        &.correct {\n          background-color: rgba(0, 128, 0, 0.9);\n\n          & ~ div {\n            background-color: rgba(0, 128, 0, 0.2);\n          }\n        }\n      }\n\n      & div {\n        display: flex;\n        flex-direction: column;\n        max-height: 0;\n        overflow: hidden;\n        transition: all 0.3s ease;\n        font-family: 'Poppins', sans-serif;\n\n        &.open {\n          max-height: 100px;\n          padding: 5px;\n        }\n\n        & span {\n          display: flex;\n          align-items: center;\n          margin: 1px 0;\n\n          & svg {\n            margin: 0 5px;\n            font-size: 2rem;\n          }\n        }\n      }\n    }\n  }\n}\n`;","import styled from 'styled-components';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport const StyledCheckIcon = styled(CheckIcon)`\n  color: green;\n`;\n\nexport const StyledCloseIcon = styled(CloseIcon)`\n  color: red;\n`;","import React from 'react';\nimport { StyledCheckIcon, StyledCloseIcon } from '../styled-components/Icons.style';\n\nexport default function QuestionReportList({ answers }) {\n  const questionClick = ({ target }) => {\n    if (target.nextSibling.classList.contains('open')) {\n      target.nextSibling.classList.remove('open');\n    } else {\n      target.nextSibling.classList.add('open');\n    }\n  };\n\n  const questionIcon = (playerAnswer, answer, correct) => {\n    if (playerAnswer === correct && playerAnswer === answer) {\n      return <StyledCheckIcon />;\n    }\n    if (playerAnswer !== correct && answer === correct) {\n      return <StyledCheckIcon />;\n    }\n    if (playerAnswer === answer) {\n      return <StyledCloseIcon />;\n    }\n  };\n\n  return (\n    <ul>\n      {answers.map(\n        ({ correct_answer, incorrect_answers, question, answer }, i) => (\n          <li key={i}>\n            <p\n              onClick={questionClick}\n              className={answer === correct_answer ? 'correct' : 'incorrect'}\n            >{`${i + 1} - ${question}`}</p>\n            <div>\n              {[correct_answer, ...incorrect_answers].map((item, j) => (\n                <span\n                  key={j}\n                  style={{\n                    fontWeight:\n                      answer === item || item === correct_answer ? '600' : null,\n                  }}\n                >\n                  {item}\n                  {questionIcon(answer, item, correct_answer)}\n                </span>\n              ))}\n            </div>\n          </li>\n        )\n      )}\n    </ul>\n  );\n}\n","import styled from 'styled-components';\n\nexport const PlayerContainer = styled.div`\n  & div:nth-child(1) {\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: space-evenly;\n    padding: 10px 0;\n    cursor: pointer;\n    margin: 3px 0;\n    \n    & span {\n      display: flex;\n      align-items: center;\n\n      :nth-child(1) {\n        text-transform: uppercase;\n        font-weight: 500;\n      }\n      pointer-events: none;\n    }\n\n    & svg {\n      font-size: 2rem;\n      color: #000119;\n      margin: 0 5px;\n      pointer-events: none;\n    }\n  }\n\n  & div:nth-child(2) {\n    max-height: 0;\n    overflow: hidden;\n    transition: all 0.2s linear;\n    overflow-y: auto;\n\n    ::-webkit-scrollbar {\n    width: 20px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: #d6dee1;\n    border-radius: 20px;\n    border: 6px solid transparent;\n    background-clip: padding-box;\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background-color: #a8bbbf;\n  }\n\n    &.open {\n      max-height: 200px;\n    }\n\n    & ul {\n    }\n  }\n`;\n","import { Box } from '@mui/material';\nimport React from 'react';\nimport { StyledModal } from '../styled-components/QuestionsReport.style';\nimport QuestionReportList from './QuestionsReportList';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { PlayerContainer } from '../styled-components/PlayerContainer.style';\n\nexport default function HistoryGame({\n  openModal: { openModal, setOpenModal },\n  history,\n}) {\n\n  const toglePlayer = ({ target }) => {\n    if (target.nextSibling.classList.contains('open')) {\n      target.nextSibling.classList.remove('open');\n    } else {\n      target.nextSibling.classList.add('open');\n    }\n  };\n\n  return (\n    <StyledModal open={openModal} onClose={() => setOpenModal(false)}>\n      <Box>\n        {history.map(({ answers, name, startedIn }, i) => {\n          const date = new Date(startedIn);\n\n          return (\n            <PlayerContainer key={i}>\n              <div onClick={toglePlayer}>\n                <span>\n                  <PersonIcon />\n                  {name}\n                </span>\n                <span>\n                  {`Jogou em \n                  ${date.toLocaleDateString('pt-BR')}`}\n                </span>\n              </div>\n              <div>\n                <QuestionReportList answers={answers} />\n              </div>\n            </PlayerContainer>\n          );\n        })}\n      </Box>\n    </StyledModal>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport StyledHomePage from '../styled-pages/HomePage.style';\nimport PlayerForm from '../components/PlayerForm';\nimport StartGameScreen from '../components/StartGameScreen';\nimport { GlobalContext } from '../context/GlobalContext';\nimport HistoryIcon from '@mui/icons-material/History';\nimport IconButton from '@mui/material/IconButton';\nimport HistoryGame from '../components/HistoryGame';\n\nconst StyledHistoryIcon = styled(HistoryIcon)`\n  color: #f3f3f3;\n  font-size: 3rem !important;\n`;\n\nexport default function HomePage() {\n  const { playerData, quantity } = useContext(GlobalContext);\n  const [nextScreen, setNextScreen] = useState(false);\n  const [nextActive, setNextActive] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  const [history, setHistory] = useState([]);\n\n  const redirectNextScreen = (isNext) => {\n    if (playerData.name && quantity) {\n      setNextActive(true);\n      setMounted(false);\n      setTimeout(() => {\n        setNextActive(false);\n        setNextScreen(isNext);\n      }, 1000);\n    }\n  };\n\n  useEffect(() => {\n    redirectNextScreen(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [playerData.name, quantity]);\n\n  useEffect(() => {\n    const gameHistory = JSON.parse(localStorage.getItem('gameHistory'));\n\n    if (gameHistory) {\n      setHistory(gameHistory);\n      setOpen(true);\n      setTimeout(() => {\n        setOpen(false);\n      }, 2000);\n    }\n  }, []);\n\n  return (\n    <StyledHomePage open={open} nextActive={nextActive} mounted={mounted}>\n      {history.length && (\n        <div>\n          <div>\n            <div>Clique aqui para ver jogos anteriores</div>\n          </div>\n          <IconButton onClick={() => setOpenModal(true)}>\n            <StyledHistoryIcon />\n          </IconButton>\n        </div>\n      )}\n      <form>\n        {nextScreen ? (\n          <StartGameScreen\n            setMounted={setMounted}\n            redirectNextScreen={redirectNextScreen}\n          />\n        ) : (\n          <PlayerForm\n            setMounted={setMounted}\n            redirectNextScreen={redirectNextScreen}\n          />\n        )}\n      </form>\n      <HistoryGame openModal={{ openModal, setOpenModal }} history={history} />\n    </StyledHomePage>\n  );\n}\n","import styled from 'styled-components';\n\nexport const StyledHeader = styled.header`\n  width: 100%;\n  height: 100px;\n  background-color: rgba(0, 1, 25, 0.95);\n\n  & div {\n    color: #f3f3f3;\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n    height: 100%;\n    width: 90%;\n    min-width: 300px;\n\n    & div {\n      display: flex;\n      flex-direction: column;\n      width: 30%;\n      justify-content: space-evenly;\n      height: 100%;\n      padding: 10px 0;\n\n      & p {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-weight: 700;\n\n        & span {\n          font-weight: 500;\n          font-size: 3rem;\n          margin: 0 5px;\n        }\n\n        &:nth-child(1) {\n          & svg {\n            font-size: 3rem;\n            color: rgb(0, 128, 0);\n          }\n        }\n\n        &:nth-child(2) {\n          & svg {\n            font-size: 3rem;\n            color: rgb(255, 0, 0);\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport { StyledHeader } from '../styled-components/Header.style';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport default function Header() {\n  const {\n    playerData: { name },\n    scoreboard: { right, wrong },\n  } = useContext(GlobalContext);\n\n  return (\n    <StyledHeader>\n      <div>\n        <p>{`PLAYER: ${name.toUpperCase()}`}</p>\n        <div>\n          <p>\n            <CheckIcon /><span>{right}</span>\n          </p>\n          <p>\n            <CloseIcon /><span>{wrong}</span>\n          </p>\n        </div>\n      </div>\n    </StyledHeader>\n  );\n}\n","// https://loading.io/css/\n\nimport styled, { keyframes } from 'styled-components';\n\nconst loaderAnimation = keyframes`\n  0% {\n    transform: scale(4);\n    opacity: 1;\n  }\n  100% {\n    transform: scale(0);\n    opacity: 0;\n  }\n`;\n\nexport const Loader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  \n   & div {\n    animation: ${loaderAnimation} 1s linear infinite;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/start-game-countdown.f89c5fa1.wav\";","import React, { useState, useEffect } from 'react';\nimport useSound from 'use-sound';\nimport { Loader as StyledLoader } from '../styled-components/Loader.style';\nimport startGameEffect from '../sound-effects/start-game-countdown.wav';\n\nexport default function Loader() {\n  const [timeLeft, setTimeLeft] = useState(3);\n  const [play] = useSound(\n    startGameEffect,\n    { volume: 0.5 }\n  );\n\n  useEffect(() => {\n    play();\n  }, [play])\n  \n  useEffect(() => {\n    if (timeLeft !== 0) {\n      const interval = setInterval(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [timeLeft]);\n\n  return (\n    <StyledLoader>\n      <div>{timeLeft ? timeLeft : 'Go'}</div>\n    </StyledLoader>\n  );\n}\n","import styled from 'styled-components';\n\nexport const StyledQuestionsContainer = styled.div`\n  width: 60%;\n  height: 70vh;\n  color: #dedfee;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  background-color: rgba(255, 255, 255, 0.05);\n  overflow: hidden;\n  padding: 10px;\n\n  & > p {\n    font-size: 2rem;\n    font-weight: 500;\n    text-align: center;\n  }\n\n  & div {\n    display: flex;\n    flex-direction: column;\n\n    &:nth-child(1) {\n      background-color: rgba(0, 1, 25, 0.95);\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      z-index: 1000;\n      font-size: 4rem;\n    }\n\n    & .incorrect.answered {\n      border-color: red !important;\n      background-color: rgba(255, 0, 0, 0.2);\n    }\n\n    & .correct.answered {\n      border-color: green !important;\n      background-color: rgba(0, 128, 0, 0.2);\n    }\n\n    & button {\n      border-color: #ffd833;\n      color: #dedfee;\n      padding: 5px 20px;\n      text-align: center;\n      margin: 5px;\n      border-radius: 5px;\n      font-size: 1.6rem;\n\n      &:hover {\n        background-color: rgba(255, 255, 0, 0.1);\n        border-color: #ffd833;\n      }\n    }\n  }\n`;\n","import styled, { keyframes, css } from 'styled-components';\n\nconst circleAnimation = keyframes`\n  0% {\n    stroke: white;\n  }\n  100% {\n    stroke: red;\n  }\n`;\n\nexport const StyledQuestionTimer = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  width: 50px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.5s ease;\n  opacity: 1;\n\n  ${({ timeLeft, isAnswered }) =>\n    (!timeLeft || isAnswered) &&\n    css`\n      opacity: 0;\n    `}\n\n  & span {\n    position: absolute;\n  }\n\n  & svg {\n    width: 50px;\n    height: 50px;\n\n    & circle {\n      stroke: white;\n      stroke-width: 5;\n      fill: transparent;\n      transition: 30s stroke-dashoffset linear;\n      transform: rotate(-90deg);\n      transform-origin: 50% 50%;\n\n      &:nth-child(1) {\n        animation: ${circleAnimation} 30s linear;\n      }\n\n      &:nth-child(2) {\n        stroke: rgba(255, 255, 255, 0.2);\n      }\n    }\n  }\n`;\n","import React, { useRef } from 'react';\nimport { StyledQuestionTimer } from '../styled-components/QuestionTimer.styled';\n\nexport default function QuestionTimer({ isAnswered, timeLeft }) {\n\n  const circleRef = useRef();\n  const circle = circleRef.current;\n  let radius;\n  let circumference;\n\n  if (circle && !isAnswered) {\n    radius = circle.r.baseVal.value;\n    circumference = radius * 2 * Math.PI;\n\n    circle.style.strokeDasharray = `${circumference} ${circumference}`;\n    circle.style.strokeDashoffset = `${circumference}`;\n  }\n\n\n  return (\n    <StyledQuestionTimer isAnswered={isAnswered} timeLeft={timeLeft}>\n      <svg>\n        <circle ref={circleRef} r='40%' cx='50%' cy='50%'></circle>\n        <circle r='40%' cx='50%' cy='50%'></circle>\n      </svg>\n      <span>{timeLeft}</span>\n    </StyledQuestionTimer>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/game-over.97b8c97e.wav\";","export default __webpack_public_path__ + \"static/media/timer.ff163f02.wav\";","export default __webpack_public_path__ + \"static/media/correct-answer.c35664ce.wav\";","export default __webpack_public_path__ + \"static/media/wrong-answer.88943cf4.wav\";","import { Button } from '@mui/material';\nimport React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { GlobalContext } from '../context/GlobalContext';\nimport QuestionTimer from './QuestionTimer';\nimport useSound from 'use-sound';\nimport gamerOverEffect from '../sound-effects/game-over.wav';\nimport timerEffect from '../sound-effects/timer.wav';\nimport correctAnswerEffect from '../sound-effects/correct-answer.wav';\nimport wrongAnswerEffect from '../sound-effects/wrong-answer.wav';\n\nexport default function Question({\n  question: questionData,\n  question: { incorrect_answers, correct_answer, category, question },\n  answersRef,\n  setNextButtonShow,\n}) {\n  const { setPlayerData, playerData, questions, scoreboard, setScore } =\n    useContext(GlobalContext);\n  const [shuffledAnswers, setShuffledAnswers] = useState([]);\n  const [isAnswered, setAnswered] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [endGame, setEndGame] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  const [gameOverPlay] = useSound(gamerOverEffect, { volume: 0.5 });\n  const [wrongAnswerPlay] = useSound(wrongAnswerEffect, { volume: 0.5 });\n  const [correctAnswerPlay] = useSound(correctAnswerEffect, { volume: 0.5 });\n  const [timerPlay, { stop: stopTimerEffect }] = useSound(timerEffect, {\n    volume: 0.2,\n  });\n\n  const { answers } = playerData;\n\n  // Update current player in storage\n  useEffect(() => {\n    console.log('aqyu');\n    const gameHistory = JSON.parse(localStorage.getItem('gameHistory'));\n    let player;\n\n    if (gameHistory) {\n      player = gameHistory[gameHistory.length - 1];\n      const playerIndex = gameHistory.findIndex((item) => item === player);\n      player = { ...player, answers, scoreboard };\n      gameHistory[playerIndex] = player;\n\n      localStorage.setItem('gameHistory', JSON.stringify(gameHistory));\n    }\n  }, [answers, scoreboard]);\n\n  useEffect(() => {\n    const answersList = [...incorrect_answers, correct_answer];\n    setShuffledAnswers(answersList.sort(() => Math.random() - 0.5));\n    Array.from(answersRef.current.children).forEach((answer) => {\n      answer.removeAttribute('disabled');\n      if (answer.classList.contains('answered')) {\n        answer.classList.remove('answered');\n      }\n    });\n  }, [answersRef, correct_answer, incorrect_answers]);\n\n  const setAnsweredCallback = useCallback(() => {\n    Array.from(answersRef.current.children).forEach((element) => {\n      element.classList.add('answered');\n      element.setAttribute('disabled', true);\n    });\n    setAnswered(true);\n  }, [answersRef]);\n\n  const addAnswer = useCallback((answer = '') => {\n    setPlayerData({\n      ...playerData,\n      answers: [\n        ...playerData.answers,\n        {\n          question,\n          incorrect_answers,\n          correct_answer,\n          answer,\n        },\n      ],\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (timeLeft !== 0) {\n      const interval = setInterval(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n\n      return () => clearInterval(interval);\n    } else {\n      setAnsweredCallback();\n      setNextButtonShow(true);\n      addAnswer();\n      wrongAnswerPlay();\n      setScore({ ...scoreboard, wrong: scoreboard.wrong + 1 });\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    addAnswer,\n    setAnsweredCallback,\n    setNextButtonShow,\n    timeLeft,\n    wrongAnswerPlay,\n  ]);\n\n  useEffect(() => {\n    if (questions[questions.length - 1] === questionData && isAnswered) {\n      setTimeout(() => {\n        setEndGame(true);\n        gameOverPlay();\n      }, 3000);\n      setTimeout(() => {\n        setRedirect(true);\n      }, 6000);\n    }\n    if (isAnswered) {\n      stopTimerEffect();\n    } else {\n      timerPlay();\n    }\n  }, [\n    gameOverPlay,\n    isAnswered,\n    questionData,\n    questions,\n    stopTimerEffect,\n    timerPlay,\n  ]);\n\n  const updateScore = (answer) => {\n    if (answer === correct_answer) {\n      setScore({\n        ...scoreboard,\n        right: scoreboard.right + 1,\n        score: scoreboard.score + (timeLeft + 10),\n      });\n    } else {\n      setScore({ ...scoreboard, wrong: scoreboard.wrong + 1 });\n    }\n  };\n\n  const handleClick = ({ target: { value } }) => {\n    if (questions[questions.length - 1] !== questionData) {\n      setNextButtonShow(true);\n    }\n    if (value === correct_answer) {\n      correctAnswerPlay();\n    } else {\n      wrongAnswerPlay();\n    }\n\n    addAnswer(value);\n    updateScore(value);\n    setAnsweredCallback();\n    setAnswered(true);\n  };\n\n  if (redirect) return <Redirect to='/feedback' />;\n\n  return (\n    <>\n      {endGame && <div>FIM DE JOGO!</div>}\n      <span>{category}</span>\n      <p>{question}</p>\n      <div ref={answersRef}>\n        {shuffledAnswers.map((answer) => (\n          <Button\n            key={answer}\n            value={answer}\n            className={answer === correct_answer ? 'correct' : 'incorrect'}\n            variant='outlined'\n            onClick={handleClick}\n          >\n            {answer}\n          </Button>\n        ))}\n      </div>\n      <QuestionTimer isAnswered={isAnswered} timeLeft={timeLeft} />\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/reveal.a8f44054.wav\";","import { Button } from '@mui/material';\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport Loader from '../components/Loader';\nimport { StyledQuestionsContainer } from '../styled-components/QuestionsContainer.style';\nimport Question from './Question';\nimport revealEffect from '../sound-effects/reveal.wav';\nimport useSound from 'use-sound';\nimport { useCallback } from 'react';\n\nexport default function QuestionsContainer() {\n  const { questions } = useContext(GlobalContext);\n  const [questionIndex, setQuestion] = useState(0);\n  const [categoryRendered, setCategoryRendered] = useState(false);\n  const [nextButtonShow, setNextButtonShow] = useState(false);\n  const [isLoaded, setLoaded] = useState(false);\n  const [revealPlay] = useSound(revealEffect, {\n    volume: 0.2,\n  });\n  const answersRef = useRef(null);\n\n  console.log(questions)\n\n  const renderCategory = useCallback(() => {\n    setCategoryRendered(false);\n    revealPlay();\n    setTimeout(() => {\n      setCategoryRendered(true);\n    }, 2000);\n  }, [revealPlay]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      renderCategory();\n      setLoaded(true);\n    }, 4000);\n  }, [renderCategory]);\n\n  return (\n    <>\n      {!isLoaded ? (\n        <StyledQuestionsContainer>\n          <Loader />\n        </StyledQuestionsContainer>\n      ) : (\n        <>\n          <StyledQuestionsContainer>\n            {!categoryRendered ? (\n              <p>{questions[questionIndex].category}</p>\n            ) : (\n              <>\n                <Question\n                  question={questions[questionIndex]}\n                  answersRef={answersRef}\n                  setNextButtonShow={setNextButtonShow}\n                />\n              </>\n            )}\n          </StyledQuestionsContainer>\n          <Button\n            variant='contained'\n            color='success'\n            onClick={() => {\n              setQuestion(questionIndex + 1);\n              renderCategory();\n              setNextButtonShow(false);\n            }}\n            style={{ display: nextButtonShow ? 'block' : 'none' }}\n          >\n            Next\n          </Button>\n        </>\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const GameSection = styled.section`\n  display: flex;\n  width: 100%;\n  height: calc(100% - 100px);\n  align-items: center;\n  justify-content: space-evenly;\n  position: relative;\n  background-color: #000119;\n\n  & > button {\n    position: absolute;\n    font-size: 1.6rem;\n    top: -70px;\n    right: 20px;\n    color: #e3001a;\n    background-color: transparent !important;\n    border: 1px solid #e3001a;\n    /* padding: 10px 50px; */\n  }\n`;\n","import styled, { keyframes } from 'styled-components';\n\nconst animation = keyframes`\n  0% {\n    color: #e3001a;\n  }\n  50% {\n    color: #dedfee;\n    opacity: 0.5;\n  }\n  75% {\n    color: #ffd833;\n    opacity: 0.7;\n  }\n  100% {\n    color: #e3001a;\n  }\n`;\n\nexport const StartingAnimation = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: #000119;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n  & span {\n    color: #e3001a;\n    font-size: 3rem;\n    font-weight: bold;\n    font-family: 'Montserrat', sans-serif;\n    text-transform: uppercase;\n    transition: all 1s linear;\n\n    animation: ${animation} 5s linear infinite;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport Header from '../components/Header';\nimport QuestionsContainer from '../components/QuestionsContainer';\nimport { GameSection } from '../styled-components/GameSection.style';\nimport { StartingAnimation } from '../styled-components/StartingAnimation.style';\n\nexport default function GamePage() {\n  const [starting, setStarting] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setStarting(false);\n    }, 5000);\n  }, []);\n\n  if (starting) {\n    return (\n      <StartingAnimation>\n        <span>Aguarde... Buscando questões...</span>\n      </StartingAnimation>\n    );\n  }\n\n  return (\n    <>\n      <Header />\n      <GameSection>\n        <QuestionsContainer />\n      </GameSection>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const StyledFeedback = styled.section`\n  width: 100%;\n  height: 100%;\n  background-color: #000119;\n  color: #f3f3f3;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-direction: column;\n  min-height: 300px;\n\n  & div:nth-child(1) {\n    background-color: rgba(227, 0, 26, 0.2);\n    display: flex;\n    align-items: center;\n    width: 40%;\n    height: 40%;\n    flex-direction: column;\n    justify-content: space-evenly;\n    min-width: 300px;\n    min-height: 200px;\n\n    & > p {\n      /* margin: 50px 0; */\n      font-size: 2.5rem;\n    }\n\n    & > div {\n      background-color: rgba(255, 255, 255, 0.2);\n      display: flex;\n      align-items: center;\n      width: 200px;\n      height: 50px;\n      justify-content: space-evenly;\n      border-radius: 10px;\n\n      & span {\n        display: flex;\n        align-items: center;\n        font-size: 3rem;\n\n        & svg {\n          font-size: 3rem;\n          margin: 0 5px;\n        }\n\n        &:nth-child(1) svg {\n          color: green;\n        }\n\n        &:nth-child(2) svg {\n          color: red;\n        }\n      }\n    }\n\n    & > span {\n      font-size: 4rem;\n      font-weight: bold;\n      text-align: center;\n    }\n  }\n  & div:nth-child(2) {\n    width: 50%;\n    display: flex;\n    justify-content: space-evenly;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/drums-appear.397db652.wav\";","import { Box } from '@mui/material';\nimport React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\nimport { StyledModal } from '../styled-components/QuestionsReport.style';\nimport QuestionReportList from './QuestionsReportList';\n\nexport default function QuestionsReport({ openModal: { openModal, setOpenModal } }) {\n  const {\n    playerData: { answers },\n  } = useContext(GlobalContext);\n  \n  return (\n    <StyledModal open={openModal} onClose={() => setOpenModal(false)}>\n      <Box>\n        <QuestionReportList answers={answers} />\n      </Box>\n    </StyledModal>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport useSound from 'use-sound';\nimport styled from 'styled-components';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { StyledFeedback } from '../styled-pages/Feedback.style';\nimport { GlobalContext } from '../context/GlobalContext';\nimport { Button } from '@mui/material';\nimport drumsAppearEffect from '../sound-effects/drums-appear.wav';\nimport QuestionsReport from '../components/QuestionsReportModal';\n\nconst StyledButtonAnswers = styled(Button)`\n  font-size: 1.6rem !important;\n  background-color: rgba(0, 128, 0, 0.5) !important;\n\n  &:hover {\n    background-color: rgba(0, 128, 0, 0.7) !important;\n  }\n`;\n\nconst StyledButtonNewGame = styled(Button)`\n  font-size: 1.6rem !important;\n  border-color: rgba(32, 0, 150, 0.5) !important;\n  background-color: rgba(32, 0, 150, 0.2) !important;\n  color: #f3f3f3 !important;\n\n  &:hover {\n    background-color: rgba(32, 0, 150, 0.7) !important;\n  }\n`;\n\nexport default function Feedback() {\n  const {\n    scoreboard: { right, wrong },\n    quantity,\n    setNewGame,\n    isNewGame,\n  } = useContext(GlobalContext);\n  const [openModal, setOpenModal] = useState(false);\n  const [playDrumsEffect] = useSound(drumsAppearEffect, { volume: 1 });\n\n  const feedbackMessage = () => {\n    if (right === quantity) {\n      return <span>Very good!</span>;\n    }\n    if (right >= 1) {\n      return <span>Good!</span>;\n    }\n    return <span>What a pity! Good luck next time.</span>;\n  };\n\n  useEffect(() => {\n    playDrumsEffect();\n  }, [playDrumsEffect]);\n\n  const newGame = () => {\n    setNewGame(true);\n  };\n\n  if (isNewGame) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <StyledFeedback>\n      <div>\n        <p>RESUMO</p>\n        <div>\n          <span>\n            <CheckIcon />\n            {right}\n          </span>\n          <span>\n            <CloseIcon />\n            {wrong}\n          </span>\n        </div>\n        {feedbackMessage()}\n      </div>\n      <div>\n        <StyledButtonAnswers\n          variant='contained'\n          onClick={() => setOpenModal(true)}\n        >\n          Show answers\n        </StyledButtonAnswers>\n        <StyledButtonNewGame onClick={newGame} variant='outlined'>\n          New Game\n        </StyledButtonNewGame>\n      </div>\n      <QuestionsReport openModal={{ openModal, setOpenModal }} />\n    </StyledFeedback>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  html {\n    font-size: 62.5%;\n  }\n\n  body {\n    font-family: 'Montserrat', sans-serif;\n    font-size: 1.6rem;\n  }\n\n  main {\n    width: 100%;\n    height: 100vh;\n  }\n`;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport GamePage from './pages/GamePage';\nimport Feedback from './pages/Feedback';\n\nimport { GlobalStyle } from './styles/globalStyle';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Switch>\n        <Route path=\"/\" exact component={ HomePage } />\n        <Route path=\"/game\" component={ GamePage } />\n        <Route path=\"/feedback\" component={ Feedback } />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalContext';\n\nconst initialPlayer = {\n  id: 0,\n  name: '',\n  answers: [],\n};\n\nconst initialScore = { right: 0, wrong: 0, score: 0 };\n\nconst TriviaProvider = ({ children }) => {\n  const [questions, setQuestions] = useState([]);\n  const [playerData, setPlayerData] = useState(initialPlayer);\n  const [scoreboard, setScore] = useState(initialScore);\n  const [isNewGame, setNewGame] = useState(false);\n  const [quantity, setQuantity] = useState(0);\n\n  useEffect(() => {\n    if (isNewGame) {\n      setPlayerData(initialPlayer);\n      setScore(initialScore);\n      setNewGame(false);\n    }\n  }, [isNewGame]);\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        questions,\n        setQuestions,\n        playerData,\n        setPlayerData,\n        quantity,\n        setQuantity,\n        scoreboard,\n        setScore,\n        setNewGame,\n        isNewGame,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n\nexport default TriviaProvider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport TriviaProvider from './provider/TriviaProvider';\n\nReactDOM.render(\n    <React.StrictMode>\n      <Router>\n        <TriviaProvider>\n          <App />\n        </TriviaProvider>\n      </Router>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}